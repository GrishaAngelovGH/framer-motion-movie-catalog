// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`should render ShoppingCartItem component 1`] = `
{
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <div
        class="bg-gray-200 shadow-lg p-5 rounded-md text-xl"
        style="transform: scale(100%) translateZ(0);"
      >
        <div
          class="text-center"
        >
          Shopping Cart Item
        </div>
        <div
          class="mt-5 flex flex-col xl:flex-row justify-evenly gap-5"
        >
          <div
            class="text-center"
          >
            <img
              class="inline w-[70px] h-[70px] border border-gray-400 p-2 bg-white rounded-full"
              src="product-1.jpg"
            />
            <div
              class="mt-2"
            >
              Product 1
            </div>
          </div>
          <div
            class="text-center"
          >
            <img
              class="inline w-[70px] h-[70px] border border-gray-400 p-2 bg-white rounded-full"
              src="product-2.jpg"
            />
            <div
              class="mt-2"
            >
              Product 2
            </div>
          </div>
        </div>
        <div
          class="mt-2 bg-gray-100 rounded-md p-2"
        >
          <div>
            Quantity: 
            2
          </div>
          <div
            class="mt-2"
          >
            Combo Price: 
            10
            £
          </div>
          <div
            class="mt-2"
          >
            Total Price: 
            20
            £
          </div>
        </div>
        <button
          class="bg-red-500 hover:bg-red-600 text-white mt-5 p-1 w-full flex justify-center"
        >
          <svg
            class="size-6"
            fill="none"
            stroke="currentColor"
            stroke-width="1.5"
            viewBox="0 0 24 24"
            xmlns="http://www.w3.org/2000/svg"
          >
            <path
              d="m14.74 9-.346 9m-4.788 0L9.26 9m9.968-3.21c.342.052.682.107 1.022.166m-1.022-.165L18.16 19.673a2.25 2.25 0 0 1-2.244 2.077H8.084a2.25 2.25 0 0 1-2.244-2.077L4.772 5.79m14.456 0a48.108 48.108 0 0 0-3.478-.397m-12 .562c.34-.059.68-.114 1.022-.165m0 0a48.11 48.11 0 0 1 3.478-.397m7.5 0v-.916c0-1.18-.91-2.164-2.09-2.201a51.964 51.964 0 0 0-3.32 0c-1.18.037-2.09 1.022-2.09 2.201v.916m7.5 0a48.667 48.667 0 0 0-7.5 0"
              stroke-linecap="round"
              stroke-linejoin="round"
            />
          </svg>
        </button>
      </div>
    </div>
  </body>,
  "container": <div>
    <div
      class="bg-gray-200 shadow-lg p-5 rounded-md text-xl"
      style="transform: scale(100%) translateZ(0);"
    >
      <div
        class="text-center"
      >
        Shopping Cart Item
      </div>
      <div
        class="mt-5 flex flex-col xl:flex-row justify-evenly gap-5"
      >
        <div
          class="text-center"
        >
          <img
            class="inline w-[70px] h-[70px] border border-gray-400 p-2 bg-white rounded-full"
            src="product-1.jpg"
          />
          <div
            class="mt-2"
          >
            Product 1
          </div>
        </div>
        <div
          class="text-center"
        >
          <img
            class="inline w-[70px] h-[70px] border border-gray-400 p-2 bg-white rounded-full"
            src="product-2.jpg"
          />
          <div
            class="mt-2"
          >
            Product 2
          </div>
        </div>
      </div>
      <div
        class="mt-2 bg-gray-100 rounded-md p-2"
      >
        <div>
          Quantity: 
          2
        </div>
        <div
          class="mt-2"
        >
          Combo Price: 
          10
          £
        </div>
        <div
          class="mt-2"
        >
          Total Price: 
          20
          £
        </div>
      </div>
      <button
        class="bg-red-500 hover:bg-red-600 text-white mt-5 p-1 w-full flex justify-center"
      >
        <svg
          class="size-6"
          fill="none"
          stroke="currentColor"
          stroke-width="1.5"
          viewBox="0 0 24 24"
          xmlns="http://www.w3.org/2000/svg"
        >
          <path
            d="m14.74 9-.346 9m-4.788 0L9.26 9m9.968-3.21c.342.052.682.107 1.022.166m-1.022-.165L18.16 19.673a2.25 2.25 0 0 1-2.244 2.077H8.084a2.25 2.25 0 0 1-2.244-2.077L4.772 5.79m14.456 0a48.108 48.108 0 0 0-3.478-.397m-12 .562c.34-.059.68-.114 1.022-.165m0 0a48.11 48.11 0 0 1 3.478-.397m7.5 0v-.916c0-1.18-.91-2.164-2.09-2.201a51.964 51.964 0 0 0-3.32 0c-1.18.037-2.09 1.022-2.09 2.201v.916m7.5 0a48.667 48.667 0 0 0-7.5 0"
            stroke-linecap="round"
            stroke-linejoin="round"
          />
        </svg>
      </button>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;
